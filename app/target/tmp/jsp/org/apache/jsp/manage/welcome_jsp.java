/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.20.v20190813
 * Generated at: 2020-01-10 07:42:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class welcome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>欢迎页面-X-admin2.0</title>\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/x-admin/css/font.css\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/x-admin/css/xadmin.css\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body onload=\"startClock()\" onunload=\"stopClock()\">\n");
      out.write("\t<div class=\"x-body layui-anim layui-anim-up\">\n");
      out.write("\t\t<blockquote class=\"layui-elem-quote\">\n");
      out.write("\t\t\t欢迎管理员： <span class=\"x-red\"> <c:choose>\n");
      out.write("\t\t\t\t\t<c:when test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user != null }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.accounts }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</c:when>\n");
      out.write("\t\t\t\t</c:choose></span>！当前时间:\n");
      out.write("\t\t\t<div id=\"show\" style=\"display: inline\"></div>\n");
      out.write("\t\t</blockquote>\n");
      out.write("\n");
      out.write("\t\t<script>\n");
      out.write("\t\t\tvar timer = null;\n");
      out.write("\t\t\tfunction displayClock(num) {//num是传入的startClock中的动态值\n");
      out.write("\t\t\t\tif (num < 10) {\n");
      out.write("\t\t\t\t\treturn \"0\" + num;\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\treturn num;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t//停止计时\n");
      out.write("\t\t\tfunction stopClock() {\n");
      out.write("\t\t\t\tclearTimeout(timer);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t//开始计时\n");
      out.write("\t\t\tfunction startClock() {\n");
      out.write("\t\t\t\tvar time = new Date();\n");
      out.write("\t\t\t\tvar years = displayClock(time.getFullYear()) + \"年\";\n");
      out.write("\t\t\t\tvar months = displayClock(time.getMonth() + 1) + \"月\";\n");
      out.write("\t\t\t\tvar dates = displayClock(time.getDate()) + \"日\";\n");
      out.write("\t\t\t\tvar hours = displayClock(time.getHours()) + \"时\";\n");
      out.write("\t\t\t\tvar minutes = displayClock(time.getMinutes()) + \"分\";\n");
      out.write("\t\t\t\tvar seconds = displayClock(time.getSeconds()) + \"秒\";\n");
      out.write("\t\t\t\t//显示时间\n");
      out.write("\t\t\t\tshow.innerHTML = years + months + dates + hours + minutes\n");
      out.write("\t\t\t\t\t\t+ seconds;//在id为show的块区域显示\n");
      out.write("\t\t\t\ttimer = setTimeout(\"startClock()\", 1000);//延时器\n");
      out.write("\t\t\t}\n");
      out.write("\t\t</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t<fieldset class=\"layui-elem-field\">\n");
      out.write("\t\t\t<legend>数据统计</legend>\n");
      out.write("\t\t\t<div class=\"layui-field-box\">\n");
      out.write("\t\t\t\t<div class=\"layui-col-md12\">\n");
      out.write("\t\t\t\t\t<div class=\"layui-card\">\n");
      out.write("\t\t\t\t\t\t<div class=\"layui-card-body\">\n");
      out.write("\t\t\t\t\t\t\t<div class=\"layui-carousel x-admin-carousel x-admin-backlog\"\n");
      out.write("\t\t\t\t\t\t\t\tlay-anim=\"\" lay-indicator=\"inside\" lay-arrow=\"none\"\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"width: 100%; height: 90px;\">\n");
      out.write("\t\t\t\t\t\t\t\t<div carousel-item=\"\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<ul class=\"layui-row layui-col-space10 layui-this\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<li class=\"layui-col-xs2\"><a href=\"javascript:;\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"x-admin-backlog-body\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<h3></h3>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<cite></cite>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<li class=\"layui-col-xs2\"><a href=\"javascript:;\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"x-admin-backlog-body\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<h3></h3>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<cite></cite>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<li class=\"layui-col-xs2\"><a href=\"javascript:;\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"x-admin-backlog-body\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<h3></h3>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<cite></cite>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</fieldset>\n");
      out.write("\t\t<fieldset class=\"layui-elem-field\">\n");
      out.write("\t\t\t<legend>系统通知</legend>\n");
      out.write("\t\t\t<div class=\"layui-field-box\">\n");
      out.write("\t\t\t\t<table class=\"layui-table\" lay-skin=\"line\">\n");
      out.write("\t\t\t\t\t<tbody>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td><a class=\"x-a\" href=\"/\" target=\"_blank\"></a></td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t</tbody>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</fieldset>\n");
      out.write("\t\t<fieldset class=\"layui-elem-field\">\n");
      out.write("\t\t\t<legend>系统信息</legend>\n");
      out.write("\t\t\t<div class=\"layui-field-box\">\n");
      out.write("\t\t\t\t<table class=\"layui-table\">\n");
      out.write("\t\t\t\t\t<tbody>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<th>xxx版本</th>\n");
      out.write("\t\t\t\t\t\t\t<td>1.0.180420</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<th>服务器地址</th>\n");
      out.write("\t\t\t\t\t\t\t<td>x.xuebingsi.com</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<th>操作系统</th>\n");
      out.write("\t\t\t\t\t\t\t<td>WINNT</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<th>运行环境</th>\n");
      out.write("\t\t\t\t\t\t\t<td>Apache/2.4.23 (Win32) OpenSSL/1.0.2j mod_fcgid/2.3.9</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<th>MYSQL版本</th>\n");
      out.write("\t\t\t\t\t\t\t<td>5.5.53</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<th>上传附件限制</th>\n");
      out.write("\t\t\t\t\t\t\t<td>2M</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<th>执行时间限制</th>\n");
      out.write("\t\t\t\t\t\t\t<td>30s</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<th>剩余空间</th>\n");
      out.write("\t\t\t\t\t\t\t<td>86015.2M</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t</tbody>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</fieldset>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
