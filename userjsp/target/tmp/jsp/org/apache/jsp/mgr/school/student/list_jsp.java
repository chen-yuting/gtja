/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.20.v20190813
 * Generated at: 2019-09-29 07:02:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mgr.school.student;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javassist.ClassPath;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/E:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1568012396869L));
    _jspx_dependants.put("jar:file:/E:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javassist.ClassPath");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>layuiAdmin 后台管理员</title>\r\n");
      out.write("    <meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("    <meta name=\"viewport\"\r\n");
      out.write("        content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/layuiadmin/layui/css/layui.css\" media=\"all\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/layuiadmin/style/admin.css\" media=\"all\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"layui-fluid\">\r\n");
      out.write("        <div class=\"layui-card\">\r\n");
      out.write("            <div class=\"layui-form layui-card-header layuiadmin-card-header-auto\">\r\n");
      out.write("                <div class=\"layui-form-item\">\r\n");
      out.write("                    <div class=\"layui-inline\">\r\n");
      out.write("                        <label class=\"layui-form-label\">姓名</label>\r\n");
      out.write("                        <div class=\"layui-input-block\">\r\n");
      out.write("                            <input type=\"text\" name=\"name\" placeholder=\"请输入\" autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"layui-inline\">\r\n");
      out.write("                        <label class=\"layui-form-label\">年龄</label>\r\n");
      out.write("                        <div class=\"layui-input-block\">\r\n");
      out.write("                            <input type=\"text\" name=\"age\" placeholder=\"请输入\" autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"layui-inline\">\r\n");
      out.write("                        <label class=\"layui-form-label\">入学时间(起)</label>\r\n");
      out.write("                        <div class=\"layui-input-block\">\r\n");
      out.write("                            <input type=\"text\" name=\"startTime\" id=\"startTime\" placeholder=\"请输入\"\r\n");
      out.write("                                autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"layui-inline\">\r\n");
      out.write("                        <label class=\"layui-form-label\">入学时间(终)</label>\r\n");
      out.write("                        <div class=\"layui-input-block\">\r\n");
      out.write("                            <input type=\"text\" name=\"endTime\" id=\"endTime\" placeholder=\"请输入\" autocomplete=\"off\"\r\n");
      out.write("                                class=\"layui-input\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"layui-inline\">\r\n");
      out.write("                        <button class=\"layui-btn layuiadmin-btn-admin\" lay-submit lay-filter=\"LAY-user-back-search\">\r\n");
      out.write("                            <i class=\"layui-icon layui-icon-search layuiadmin-button-btn\"></i>\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"layui-card-body\">\r\n");
      out.write("\r\n");
      out.write("                <div style=\"padding-bottom: 10px;\">\r\n");
      out.write("\r\n");
      out.write("                    <button class=\"layui-btn layuiadmin-btn-admin\" data-type=\"batchdel\">批量删除</button>\r\n");
      out.write("                    <button class=\"layui-btn layuiadmin-btn-admin\" data-type=\"add\"><i\r\n");
      out.write("                            class=\"layui-icon\">&#xe654;</i>添加</button>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <table id=\"LAY-user-back-manage\" lay-filter=\"LAY-user-back-manage\"></table>\r\n");
      out.write("                <script type=\"text/html\" id=\"table-bar\">\r\n");
      out.write("                    <a class=\"layui-btn layui-btn-normal layui-btn-xs\" lay-event=\"edit\"><i class=\"layui-icon layui-icon-edit\"></i>编辑</a>\r\n");
      out.write("                    <a class=\"layui-btn layui-btn-danger layui-btn-xs\" lay-event=\"del\"><i class=\"layui-icon layui-icon-delete\"></i>删除</a>\r\n");
      out.write("                </script>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/layuiadmin/layui/layui.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        layui.config({\r\n");
      out.write("            base: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/layuiadmin/' //静态资源所在路径\r\n");
      out.write("        }).extend({\r\n");
      out.write("            index: 'lib/index' //主入口模块\r\n");
      out.write("        }).use(['index', '_school_student', 'table', 'laydate'], function () {\r\n");
      out.write("            var $ = layui.$\r\n");
      out.write("                , form = layui.form\r\n");
      out.write("                , table = layui.table\r\n");
      out.write("                , laydate = layui.laydate;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            //渲染时间选择框\r\n");
      out.write("            laydate.render({\r\n");
      out.write("                elem: '#startTime' //或 elem: document.getElementById('test')、elem: lay('#test') 等\r\n");
      out.write("            });\r\n");
      out.write("            laydate.render({\r\n");
      out.write("                elem: '#endTime'\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            //监听搜索\r\n");
      out.write("            form.on('submit(LAY-user-back-search)', function (data) {\r\n");
      out.write("                var field = data.field;\r\n");
      out.write("                //执行重载\r\n");
      out.write("                table.reload('LAY-user-back-manage', {\r\n");
      out.write("                    where: field\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            //事件\r\n");
      out.write("            var active = {\r\n");
      out.write("                batchdel: function () {\r\n");
      out.write("                    var checkStatus = table.checkStatus('LAY-user-back-manage')\r\n");
      out.write("                        , checkData = checkStatus.data\r\n");
      out.write("                        , istudents = []\r\n");
      out.write("                        , istudent = {}; //得到选中的数据\r\n");
      out.write("\r\n");
      out.write("                    if (checkData.length === 0) {\r\n");
      out.write("                        return layer.msg('请选择数据');\r\n");
      out.write("                    }\r\n");
      out.write("                    checkData.forEach(function (element) {\r\n");
      out.write("                        istudent = {\r\n");
      out.write("                            istudent: element.istudent\r\n");
      out.write("                        }\r\n");
      out.write("                        istudents.push(istudent);\r\n");
      out.write("                    });\r\n");
      out.write("                    if (istudents.length != 0) {\r\n");
      out.write("                        layer.confirm('确定删除？', function (index) {\r\n");
      out.write("                            $.ajax({\r\n");
      out.write("                                url: 'batchDelete.ajax',\r\n");
      out.write("                                type: 'post', //如果无需自定义HTTP类型，可不加该参数\r\n");
      out.write("                                dataType: \"json\",\r\n");
      out.write("                                data: {\r\n");
      out.write("                                    json: JSON.stringify(istudents)\r\n");
      out.write("                                },\r\n");
      out.write("                                success: function (res) {\r\n");
      out.write("                                    if (res.code == 0) {\r\n");
      out.write("                                        layer.alert(\"删除成功\");\r\n");
      out.write("                                        table.reload(\"LAY-user-back-manage\");\r\n");
      out.write("                                    } else {\r\n");
      out.write("                                        layer.alert(\"由于未知错误，删除失败，请稍后重试\");\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("                            });\r\n");
      out.write("                            layer.close(index);\r\n");
      out.write("\r\n");
      out.write("                        });\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                , add: function () {\r\n");
      out.write("                    layer.open({\r\n");
      out.write("                        type: 2\r\n");
      out.write("                        , title: '添加'\r\n");
      out.write("                        , content: 'add.mvc'\r\n");
      out.write("                        , area: ['400px', '400px']\r\n");
      out.write("                        , btn: ['确定', '取消']\r\n");
      out.write("                        , yes: function (index, layero) {\r\n");
      out.write("                            var iframeWindow = window['layui-layer-iframe' + index]\r\n");
      out.write("                                , submitID = 'LAY-user-back-submit'\r\n");
      out.write("                                , submit = layero.find('iframe').contents().find('#' + submitID);\r\n");
      out.write("\r\n");
      out.write("                            //监听提交\r\n");
      out.write("                            iframeWindow.layui.form.on('submit(' + submitID + ')', function (data) {\r\n");
      out.write("                                var field = data.field; //获取提交的字段\r\n");
      out.write("                                //提交 Ajax 成功后，静态更新表格中的数据\r\n");
      out.write("                                //$.ajax({});\r\n");
      out.write("                                $.ajax({\r\n");
      out.write("                                    type: \"POST\",\r\n");
      out.write("                                    url: \"add.ajax\",\r\n");
      out.write("                                    data: field,\r\n");
      out.write("                                    dataType: \"json\",\r\n");
      out.write("                                    success: function (msg) {\r\n");
      out.write("                                        if (msg.code == \"0\") {\r\n");
      out.write("                                            layer.alert(\"增加成功\", {\r\n");
      out.write("                                                icon: 6\r\n");
      out.write("                                            });\r\n");
      out.write("                                            table.reload('LAY-user-back-manage'); //数据刷新\r\n");
      out.write("                                        }\r\n");
      out.write("                                    },\r\n");
      out.write("                                    error: function () {\r\n");
      out.write("                                        layer.alert(\"增加失败!\", {\r\n");
      out.write("                                            icon: 6\r\n");
      out.write("                                        });\r\n");
      out.write("                                    }\r\n");
      out.write("                                });\r\n");
      out.write("\r\n");
      out.write("                                layer.close(index); //关闭弹层\r\n");
      out.write("                            });\r\n");
      out.write("\r\n");
      out.write("                            submit.trigger('click');\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            $('.layui-btn.layuiadmin-btn-admin').on('click', function () {\r\n");
      out.write("                var type = $(this).data('type');\r\n");
      out.write("                active[type] ? active[type].call(this) : '';\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
